<Application x:Class="Task_Manager.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:local="clr-namespace:Task_Manager"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        
        <!--Стиль для гланых кнопок-->
        <Style x:Key="MainButtonsStyle" TargetType="Button">
            <Setter Property="Background" Value="#0461c0"/>
            <Setter Property="Foreground" Value="#FFFFFF"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="10">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#0353a4"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!--Стиль для текст-боксов-->
        <Style x:Key="TextBoxsStyle" TargetType="TextBox">
            <Setter Property="Background" Value="#DDE9F5"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Padding" Value="5,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="10">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Стиль для ComboBox -->
        <Style TargetType="ComboBox">
            <Setter Property="Background" Value="#DDE9F5"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <Border Name="OutBorder"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="10,10,0,0"
                                    Visibility="Hidden"/>
                            <Border Name="Border"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="10">
                                <Grid>
                                    <ToggleButton Grid.Column="2"
                                                  ClickMode="Press"
                                                  Focusable="False"
                                                  IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay,
                                                              RelativeSource={RelativeSource TemplatedParent}}">
                                        <ToggleButton.Template>
                                            <ControlTemplate>
                                                <Grid Background="Transparent">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition/>
                                                        <ColumnDefinition Width="30"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Path Grid.Column="1"
                                                          Data="M 0 0 L 4 4 L 8 0 Z"
                                                          HorizontalAlignment="Center"
                                                          VerticalAlignment="Center"
                                                          Fill="Black"/>
                                                </Grid>
                                            </ControlTemplate>
                                        </ToggleButton.Template>
                                    </ToggleButton>
                                    <ContentPresenter IsHitTestVisible="False"
                                                      Content="{TemplateBinding SelectionBoxItem}"
                                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                      Margin="15,0,0,0"
                                                      VerticalAlignment="Center"
                                                      HorizontalAlignment="Left"/>
                                </Grid>
                            </Border>
                            <Popup Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                <Grid SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border Background="{TemplateBinding Background}" CornerRadius="0,0,10,10">
                                        <ScrollViewer CanContentScroll="True" >
                                            <ItemsPresenter SnapsToDevicePixels="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDropDownOpen" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#B0C4DE"/>
                                <Setter TargetName="OutBorder" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Стиль для ComboBoxItem -->
        <Style TargetType="ComboBoxItem">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border Name="Border"
                        Padding="5"
                        Background="Transparent">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--Стиль для элементов списка-->
        <Style TargetType="ListViewItem">
            <Setter Property="Background" Value="#DDE9F5"/>
            <Setter Property="Margin" Value="0,7,0,0"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="10">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#B0C4DE"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--Стиль для кнопок списка-->
        <Style x:Key="ListButtonsStyle" TargetType="Button">
            <Setter Property="Foreground" Value="#FFFFFF"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Margin" Value="5,10"/>
            <Setter Property="Width" Value="33"/>
            <Setter Property="Height" Value="33"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="10">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--Стиль для селектора дедлайна-->
        <Style TargetType="{x:Type xctk:DateTimePicker}">
            <Setter Property="Background" Value="#DDE9F5"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Format" Value="Custom"/>
            <Setter Property="FormatString" Value="dd.MM.yy HH:mm"/>
            <Setter Property="ShowButtonSpinner" Value="False"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type xctk:DateTimePicker}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Border Name="OutBorder"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="10,0,0,0"
                                    Visibility="Hidden"/>
                            <Border Background="{TemplateBinding Background}" CornerRadius="10,0,0,10">
                                <xctk:DateTimeUpDown FormatString="{TemplateBinding FormatString}" 
                                                     Format="{TemplateBinding Format}"
				                                     ShowButtonSpinner="{TemplateBinding ShowButtonSpinner}" 
				                                     Value="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}"
                                                     Background="Transparent"
                                                     BorderThickness="{TemplateBinding BorderThickness}"/>
                            </Border>

                            <ToggleButton x:Name="CalendarToggleButton" Background="{TemplateBinding Background}"
                                          IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                          Grid.Column="1" >
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border Background="{TemplateBinding Background}" CornerRadius="0,10,10,0">
                                                        <Grid SnapsToDevicePixels="True">
                                                            <xctk:ButtonChrome Background="Transparent" BorderThickness="{TemplateBinding BorderThickness}"/>
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*"/>
                                                                    <ColumnDefinition Width="30"/>
                                                                </Grid.ColumnDefinitions>
                                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" 
                                                                                  Content="{TemplateBinding Content}" 
                                                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                                                                  HorizontalAlignment="Stretch" 
                                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                                                  VerticalAlignment="Stretch"/>
                                                                <Grid Grid.Column="1" IsHitTestVisible="False" Margin="5">
                                                                    <Path Data="M 0 0 L 4 4 L 8 0 Z" 
                                                                          HorizontalAlignment="Center" 
                                                                          VerticalAlignment="Center" 
                                                                          Fill="Black"/>
                                                                </Grid>
                                                            </Grid>
                                                        </Grid>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>

                            <Popup IsOpen="{Binding IsChecked, ElementName=CalendarToggleButton}" StaysOpen="False">
                                <Border Padding="3" Background="{TemplateBinding Background}">
                                    <StackPanel Background="{TemplateBinding Background}">
                                        <Calendar DisplayDate="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}"
                                                  Background="{TemplateBinding Background}"
                                                  SelectedDate="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <xctk:TimePicker Value="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </StackPanel>
                                </Border>
                            </Popup>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsOpen" Value="True">
                                <Setter TargetName="OutBorder" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
